rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    function isLoggedIn() {
      return request.auth != null && request.auth.uid != null;
    }

    function currentUser() {
      return isLoggedIn() ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data : null;
    }
    
    function isDocOwner(docId) {
      let isOwner = request.auth.uid == docId;

      return isLoggedIn() && isOwner;
    }

    function isAdmin() {
      let user = currentUser();
      return user != null && user.isAdmin;
    }

    function isAuthor() {
      let user = currentUser();
      return user != null && user.isAuthor;
    }

    match /users/{uid} {
      allow read, write: if isDocOwner(uid);
    }

    match /articles/{uid} {
      allow read: if true;
      allow write: if isAuthor();
    }

    match /commentThreads/{uid} {
      allow read: if true;
      allow create: if isAuthor();

      match /comments/{commentId} {
        allow read, create: if true;
      }
    }

    match /settings/social/links/{uid} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /settings/logo {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}